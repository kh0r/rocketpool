- name: Install and setup Rocket Pool, geth pruning and monitoring
  hosts: miners
  become: yes
  become_user: rp
  tasks:
    - file:
        state: directory
        path: ~/bin
    - name: Download Rocket Pool binary
      get_url:
        url: https://github.com/rocket-pool/smartnode-install/releases/download/{{ rocket_pool.version }}/rocketpool-cli-linux-amd64
        dest: ~/bin/rocketpool
        mode: u=rwx,g=rx,o=rx
    - name: Install rocketpool
      shell: "~/bin/rocketpool service install -d -y -v {{ rocket_pool.version }}"
    - name: Configure Rocket Pool
      blockinfile:
        path: ~/.rocketpool/settings.yml
        create: yes
        block: |
          chains:
            eth1:
              client:
                selected: geth
                params:
                - env: ETH1_P2P_PORT
                  value: "40404"
            eth2:
              client:
                selected: prysm
                params:
                - env: ETH2_P2P_PORT
                  value: "10002"
          metrics:
            enabled: true

    - name: Set the eth1 client data path
      lineinfile:
        path: ~/.rocketpool/docker-compose.yml
        regexp: '^(.*)(?:eth1clientdata)(:/ethclient)'
        line: "\\1{{ rocket_pool.eth1.client_data_path }}\\2"
        backrefs: yes

    - name: Set the eth2 client data path
      lineinfile:
        path: ~/.rocketpool/docker-compose.yml
        regexp: '^(.*)(?:eth2clientdata)(:/ethclient)'
        line: "\\1{{ rocket_pool.eth2.client_data_path }}\\2"
        backrefs: yes

    - name: Configure Prysm beacon with fallback web3 provider
      lineinfile:
        path: ~/.rocketpool/chains/eth2/start-beacon.sh
        regexp: '^(.*\/app\/cmd\/beacon-chain\/beacon-chain )(?:--fallback-web3provider=\S* )?(.*)'
        line: "\\1--fallback-web3provider={{ rocket_pool.eth1.fallback_web3provider }} \\2"
        backrefs: yes

    - name: Copy geth prune script
      copy:
        src: ./prune_geth.sh
        dest: /home/rp/bin/
        mode: preserve

    - name: "Schedule monthly geth pruning"
      cron:
        name: "geth pruning"
        minute: "0"
        hour: "0"
        day: "1"
        user: "rp"
        job: "/home/rp/bin/prune_geth.sh"

    - name: Enable grafana provisioning through the mounted directory
      replace:
        path: ~/.rocketpool/docker-compose-metrics.yml
        regexp: '^(  grafana:(?:.|\s)+?environment:\n)'
        replace: "\\1      - GF_PATHS_PROVISIONING=/var/lib/grafana/provisioning\n"

    - name: Set the grafana storage path
      lineinfile:
        path: ~/.rocketpool/docker-compose-metrics.yml
        regexp: '^(.*)(?:grafana\-storage)(:/var/lib/grafana.*)'
        line: "\\1{{ rocket_pool.grafana.storage_path }}\\2"
        backrefs: yes

    - name: Copy grafana provisioning
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "0777"
        directory_mode: "0777"
      with_items:
        - {src: "./monitoring/grafana/datasource.yml", dest: "{{ rocket_pool.grafana.storage_path }}/provisioning/datasources/"}
        - {src: "./monitoring/grafana/dashboard.yml", dest: "{{ rocket_pool.grafana.storage_path }}/provisioning/dashboards/"}
    
    - name: Download rocketpool grafana dashboard
      get_url:
        url: "https://raw.githubusercontent.com/rocket-pool/smartnode-install/master/Dashboards/Rocket%20Pool%20Dashboard%20v1.0.0%20for%20Prysm.json"
        dest: "{{ rocket_pool.grafana.storage_path }}/provisioning/dashboards/"

    - name: Start Rocket Pool service
      shell: ~/bin/rocketpool service start

#    - name: TODO - wait for eth1 and eth2 to be in sync
#      shell: echo "TODO - wait for eth1 & eth2"
#    - name: TODO - Init wallet (rocketpool wallet init)
#      shell: echo "TODO - rocketpool wallet recover --password <the-password> --mnemonic <mnemonic>"